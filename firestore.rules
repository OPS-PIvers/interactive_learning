rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidProject() {
      return request.resource.data.keys().hasAll(['title', 'description', 'createdBy']) &&
             request.resource.data.title is string &&
             request.resource.data.description is string &&
             request.resource.data.createdBy is string &&
             request.resource.data.title.size() <= 200 &&
             request.resource.data.description.size() <= 1000;
    }
    
    function isValidHotspot() {
      return resource.data.keys().hasAll(['x', 'y', 'title']) &&
             resource.data.x is number &&
             resource.data.y is number &&
             resource.data.x >= 0 && resource.data.x <= 100 &&
             resource.data.y >= 0 && resource.data.y <= 100 &&
             resource.data.title is string &&
             resource.data.title.size() <= 100;
    }
    
    function isValidTimelineEvent() {
      return resource.data.keys().hasAll(['step', 'name']) &&
             resource.data.step is number &&
             resource.data.step > 0 &&
             resource.data.name is string &&
             resource.data.name.size() <= 100;
    }
    
    // Projects collection - require authentication and ownership
    match /projects/{projectId} {
      allow read: if isAuthenticated() && isOwner(resource.data.createdBy);
      
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.createdBy) &&
                       isValidProject();
      
      allow update: if isAuthenticated() && 
                       isOwner(resource.data.createdBy) &&
                       isValidProject();
      
      allow delete: if isAuthenticated() && 
                       isOwner(resource.data.createdBy);
      
      // Hotspots subcollection
      match /hotspots/{hotspotId} {
        allow read, write: if isAuthenticated() && 
                             isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data.createdBy);
      }
      
      // Timeline events subcollection  
      match /timeline_events/{eventId} {
        allow read, write: if isAuthenticated() && 
                             isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data.createdBy);
      }
    }
    
    // User profiles collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}