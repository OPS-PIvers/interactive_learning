name: Claude Code PR Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  claude-review:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run initial tests
        run: npm run test:run
        continue-on-error: true

      - name: Wait for Gemini review
        run: |
          echo "Waiting 3 minutes for Gemini Code Assist to review PR..."
          sleep 180

      - name: Fetch PR comments and extract Gemini feedback
        id: gemini-feedback
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number
              });
            
            // Look for Gemini feedback in comments
            let geminiFeedback = '';
            for (const comment of comments) {
              // Check if comment is from Gemini Code Assist
              if (comment.user.login === 'gemini-code-assist' || 
                  comment.user.login.includes('gemini-code-assist') ||
                  comment.body.includes('Gemini Code Assist') ||
                  comment.body.includes('@gemini-code-assist')) {
                geminiFeedback = comment.body;
                console.log(`Found Gemini feedback from ${comment.user.login}`);
                break;
              }
            }
            
            if (geminiFeedback) {
              console.log('Gemini feedback found:', geminiFeedback.substring(0, 200) + '...');
              core.setOutput('feedback', geminiFeedback);
              core.setOutput('has_feedback', 'true');
            } else {
              console.log('No Gemini feedback found in PR comments');
              core.setOutput('feedback', '');
              core.setOutput('has_feedback', 'false');
            }
            } catch (error) {
              console.error('Error fetching PR comments:', error);
              core.setOutput('feedback', '');
              core.setOutput('has_feedback', 'false');
            }

      - name: Claude Code Review and Fix
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          direct_prompt: |
            ${{ steps.gemini-feedback.outputs.has_feedback == 'true' && format('PRIORITY: Address the following feedback from Gemini Code Assist:
            
            {0}
            
            Based on this feedback, review the PR and make the necessary changes. Additionally, ensure:', steps.gemini-feedback.outputs.feedback) || 'Review this PR thoroughly and make any necessary changes to ensure:' }}
            1. Code follows project conventions in CLAUDE.md
            2. TypeScript types are correct
            3. All tests pass
            4. No security vulnerabilities
            5. Proper error handling
            6. Accessibility requirements met
            7. Mobile responsiveness maintained
            
            Fix any issues found and commit the changes directly to this PR branch.
          
      - name: Run tests after Claude fixes
        run: npm run test:run

      - name: Build project
        run: npm run build

      - name: Check if PR is ready for merge
        id: merge-check
        run: |
          # Check if tests pass and build succeeds
          if npm run test:run && npm run build; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto-merge PR if ready
        if: steps.merge-check.outputs.ready == 'true'
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --squash --auto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch after merge
        if: steps.merge-check.outputs.ready == 'true'
        run: |
          # Wait a bit for merge to complete, then delete branch
          sleep 10
          gh api repos/${{ github.repository }}/git/refs/heads/${{ github.head_ref }} -X DELETE || echo "Branch already deleted"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  claude-comment-trigger:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Claude Code Response
        uses: anthropics/claude-code-action@beta
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          trigger_phrase: "@claude"
